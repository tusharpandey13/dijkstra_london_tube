{"version":3,"sources":["store/index.js","components/Map/Node.js","components/Map/NodeGroup.js","components/Map/NodesLayer.js","components/Map/Edge.js","components/Map/EdgesGroup.js","components/Map/ActiveLayer.js","components/Map/BgLayer.js","components/Map/EdgesLayer.js","components/Map/index.js","components/Controls.js","components/index.js","App.js","index.js"],"names":["drawConfig","active","dim","w","Math","pow","selected","selectedid","nodecolors","Number","nodedotcolors","initialState","selectedLabels","pathnodes","reducer","state","action","type","stageRef","tmp","Set","dijkstra","nodedata","1","weight","name","x","y","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","graphdata","route","Graph","nodes","length","path","Node","props","useState","nodeRadiusTransformer","setnodeRadiusTransformer","nodeBgTransformer","setnodeBgTransformer","nodeOpacityTransformer","setnodeOpacityTransformer","nodeStroke","setnodeStroke","nodeStrokeWidthTransfomer","setnodeStrokeWidthTransfomer","nodeDotRadiusTransformer","setnodeDotRadiusTransformer","nodeDotBgTransformer","setnodeDotBgTransformer","nodeDotOpacityTransformer","setnodeDotOpacityTransformer","nodeTextOpacityTransformer","setnodeTextOpacityTransformer","nodeTextSizeTransformer","setnodeTextSizeTransformer","nodeTextStyleTransformer","setnodeTextStyleTransformer","useEffect","v","isSelected","isActive","width","height","radius","fill","opacity","stroke","strokeEnabled","strokeWidth","k","text","fontSize","fontStyle","NodeGroup","setIsActive","setIsSelected","setSelectedid","nodeRef","useRef","current","moveToTop","store","includes","ref","xScale","xOffset","yScale","yOffset","onMouseEnter","e","onMouseLeave","onClick","a","tmplabels","dispatch","NodesLayer","setNodes","setxOffset","setyOffset","setxScale","setyScale","tmpnodedata","Object","entries","filter","map","sort","b","window","innerWidth","innerHeight","key","Edge","edgeBg","setedgeBg","edgeWidth","setedgeWidth","edgeOpacity","setedgeOpacity","points","n0","n1","closed","lineJoin","EdgesLayer","edges","setEdges","tmpedges","graph","k1","v1","push","setGraph","i","EdgesGroup","BgLayer","setDim","align","DynamicMap","ActiveLayer","Controls","className","href","target","rel","class","data-color-scheme","data-size","aria-label","data-icon","Content","useReducer","undefined","setWindowSize","handleResize","addEventListener","removeEventListener","useWindowSize","style","display","flexFlow","justifyContent","Map","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6eb9f81.chunk.js","sourcesContent":["import Graph from 'node-dijkstra';\n\nconst drawConfig = {\n  globalXScale: 0.95,\n  globalYScale: 0.95,\n  // nodeBg: '#FF4136',\n  edgeBg: (active, dim) => {\n    // (active ? '#ffeb3b' : '#2196f355')\n    if (dim) return '#aaaaaa';\n    if (active) return '#1e90ff';\n    return '#2196f355';\n  },\n  edgeWidthTransformer: (w, active, dim) => (active ? 6 : 4 * w),\n  edgeOpacityTransformer: (w, active, dim) => (active ? 1 : 0.65 + 0.35 * Math.pow(w, 5)),\n  nodeRadiusTransformer: (w, active) => (active ? 8 : 2.5 + 2 * (w / 7)),\n  nodeOpacityTransformer: w => 0.75 + 0.25 * (w / 7),\n  nodeBgTransformer: (w, active, selected, selectedid) => {\n    if (selected || active) {\n      return nodecolors[w];\n    }\n    return '#ffffff';\n  },\n  nodeStroke: '#000000',\n  nodeStrokeWidthTransfomer: (w, active) => 0.7 - ((1 - Number(active)) * w) / 7,\n  nodeDotRadiusTransformer: (w, active) => (active ? 2 + (2 * w) / 3 : w > 3 ? Math.pow(w / 4, 1.1) : 0),\n  nodeDotBgTransformer: (w, active, selected, selectedid) => {\n    // if (selected) return '#00000033';\n    if (active) return nodedotcolors[w];\n    return '#000000';\n  },\n  nodeDotOpacityTransformer: (w, active) => (active ? 1 : 0.75 + 0.25 * (w / 7)),\n  nodeTextOpacityTransformer: w => 1, //0.5 + (0.5 * w) / 7,\n  nodeTextSizeTransformer: w => 20,\n  nodeTextStyleTransformer: w => (w > 5 ? 'Bold' : 'Normal'),\n};\n\nconst initialState = {\n  // stageRef: undefined,\n  selectedLabels: [],\n  pathnodes: [],\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'SETSTAGEREF':\n      return { ...state, stageRef: action.stageRef };\n    case 'SETSELECTEDLABELS':\n      const tmp = [...new Set(action.selectedLabels)];\n      return {\n        ...state,\n        selectedLabels: tmp,\n        pathnodes: dijkstra(tmp),\n      };\n    default:\n      return state;\n  }\n};\n\nconst nodedata = {\n  1: {\n    weight: 5,\n    name: 'Acton Town',\n    x: 0.3836993280212835,\n    y: 0.3319031588167286,\n  },\n  2: {\n    weight: 3,\n    name: 'Aldgate',\n    x: 0.6211452680176716,\n    y: 0.3697771136536384,\n  },\n  3: {\n    weight: 4,\n    name: 'Aldgate East',\n    x: 0.6245113422499774,\n    y: 0.3734046979965323,\n  },\n  4: {\n    weight: 3,\n    name: 'All Saints',\n    x: 0.6936642155478768,\n    y: 0.3578833692682703,\n  },\n  5: {\n    weight: 3,\n    name: 'Alperton',\n    x: 0.36099085800269864,\n    y: 0.4569526237075565,\n  },\n  6: {\n    weight: 2,\n    name: 'Amersham',\n    x: 0.0045535461527986595,\n    y: 0.8957056162064907,\n  },\n  7: {\n    weight: 3,\n    name: 'Angel',\n    x: 0.5860024975051392,\n    y: 0.42883380164103346,\n  },\n  8: {\n    weight: 3,\n    name: 'Archway',\n    x: 0.551809331693473,\n    y: 0.5380352674412854,\n  },\n  9: {\n    weight: 3,\n    name: 'Arnos Grove',\n    x: 0.5544400115457013,\n    y: 0.7066030264368854,\n  },\n  10: {\n    weight: 3,\n    name: 'Arsenal',\n    x: 0.5859165615012033,\n    y: 0.5159201305241193,\n  },\n  11: {\n    name: 'Baker Street',\n    x: 0.5264626652692415,\n    y: 0.3971837900696999,\n    weight: 1,\n  },\n  12: {\n    weight: 3,\n    name: 'Balham',\n    x: 0.5317485661220198,\n    y: 0.13492316782899486,\n  },\n  13: {\n    weight: 7,\n    name: 'Bank',\n    x: 0.6059432996544563,\n    y: 0.3664825549439989,\n  },\n  14: {\n    weight: 3,\n    name: 'Barbican',\n    x: 0.5951580384145324,\n    y: 0.3899062351213086,\n  },\n  15: {\n    weight: 3,\n    name: 'Barking',\n    x: 0.8027561767429655,\n    y: 0.4531748724411015,\n  },\n  16: {\n    weight: 3,\n    name: 'Barkingside',\n    x: 0.8117431044570408,\n    y: 0.6048892559364255,\n  },\n  17: {\n    name: 'Barons Court',\n    x: 0.4605188150041354,\n    y: 0.2913048504673689,\n    weight: 1,\n  },\n  18: {\n    weight: 3,\n    name: 'Bayswater',\n    x: 0.4907100033241245,\n    y: 0.36255556417501966,\n  },\n  19: {\n    weight: 2,\n    name: 'Beckton',\n    x: 0.7798769318074613,\n    y: 0.3713848464635726,\n  },\n  20: {\n    name: 'Beckton Park',\n    x: 0.7725624187090948,\n    y: 0.3512671658929732,\n    weight: 1,\n  },\n  21: {\n    weight: 3,\n    name: 'Becontree',\n    x: 0.8561261134655033,\n    y: 0.4554674381375615,\n  },\n  22: {\n    name: 'Belsize Park',\n    x: 0.5182539400309882,\n    y: 0.48889543392935414,\n    weight: 1,\n  },\n  23: {\n    weight: 3,\n    name: 'Bermondsey',\n    x: 0.6348244129997991,\n    y: 0.315676325618815,\n  },\n  24: {\n    name: 'Bethnal Green',\n    x: 0.6450606115589813,\n    y: 0.4116626596450367,\n    weight: 1,\n  },\n  25: {\n    weight: 3,\n    name: 'Blackfriars',\n    x: 0.5891163229498776,\n    y: 0.3621987705126215,\n  },\n  26: {\n    name: 'Blackhorse Road',\n    x: 0.6604484710944515,\n    y: 0.6085812181721523,\n    weight: 1,\n  },\n  27: {\n    weight: 3,\n    name: 'Blackwall',\n    x: 0.7010879891198712,\n    y: 0.34864583866596016,\n  },\n  28: {\n    weight: 5,\n    name: 'Bond Street',\n    x: 0.5353902409639493,\n    y: 0.3694707861472216,\n  },\n  29: {\n    weight: 3,\n    name: 'Borough',\n    x: 0.5993188870764269,\n    y: 0.3262403252502594,\n  },\n  30: {\n    name: 'Boston Manor',\n    x: 0.3315812472926671,\n    y: 0.3081616696871162,\n    weight: 1,\n  },\n  31: {\n    name: 'Bounds Green',\n    x: 0.5646356192916905,\n    y: 0.6759189925354145,\n    weight: 1,\n  },\n  32: {\n    weight: 3,\n    name: 'Bow Church',\n    x: 0.6846284740250174,\n    y: 0.41264053778821136,\n  },\n  33: {\n    weight: 3,\n    name: 'Bow Road',\n    x: 0.6801028250199341,\n    y: 0.41132246654148863,\n  },\n  34: {\n    name: 'Brent Cross',\n    x: 0.46096170722017676,\n    y: 0.5753517824484505,\n    weight: 1,\n  },\n  35: {\n    weight: 2,\n    name: 'Brixton',\n    x: 0.5758540152555728,\n    y: 0.19957412484563627,\n  },\n  36: {\n    name: 'Bromley-By-Bow',\n    x: 0.6949529564662437,\n    y: 0.40439136213880866,\n    weight: 1,\n  },\n  37: {\n    name: 'Buckhurst Hill',\n    x: 0.7635402156289137,\n    y: 0.7401396776336276,\n    weight: 1,\n  },\n  38: {\n    weight: 3,\n    name: 'Burnt Oak',\n    x: 0.402397824311923,\n    y: 0.6618171242616459,\n  },\n  39: {\n    name: 'Caledonian Road',\n    x: 0.5709347418367168,\n    y: 0.48128888659707897,\n    weight: 1,\n  },\n  40: {\n    name: 'Camden Town',\n    x: 0.5433065408684288,\n    y: 0.45193927741059453,\n    weight: 1,\n  },\n  41: {\n    name: 'Canada Water',\n    x: 0.6504896345832615,\n    y: 0.31666231963865776,\n    weight: 1,\n  },\n  42: {\n    name: 'Canary Wharf',\n    x: 0.6844931141478331,\n    y: 0.33941417140107083,\n    weight: 1,\n  },\n  43: {\n    name: 'Canning Town',\n    x: 0.7182661746397162,\n    y: 0.3710708057325316,\n    weight: 1,\n  },\n  44: {\n    name: 'Cannon Street',\n    x: 0.6038528462752891,\n    y: 0.35988576004419764,\n    weight: 1,\n  },\n  45: {\n    name: 'Canons Park',\n    x: 0.36689415135281567,\n    y: 0.6783324014138917,\n    weight: 1,\n  },\n  46: {\n    name: 'Chalfont & Latimer',\n    x: 0.057936685256568664,\n    y: 0.8768511629796493,\n    weight: 1,\n  },\n  47: {\n    weight: 3,\n    name: 'Chalk Farm',\n    x: 0.5303151498003659,\n    y: 0.46810813162063214,\n  },\n  48: {\n    name: 'Chancery Lane',\n    x: 0.5798388759606157,\n    y: 0.38364305399005105,\n    weight: 1,\n  },\n  49: {\n    name: 'Charing Cross',\n    x: 0.5640477656171156,\n    y: 0.34901041577925895,\n    weight: 1,\n  },\n  50: {\n    weight: 2,\n    name: 'Chesham',\n    x: 0,\n    y: 1,\n  },\n  51: {\n    weight: 3,\n    name: 'Chigwell',\n    x: 0.7964750882078552,\n    y: 0.7107687855719473,\n  },\n  52: {\n    name: 'Chiswick Park',\n    x: 0.39796780445859076,\n    y: 0.3048459352188162,\n    weight: 1,\n  },\n  53: {\n    weight: 3,\n    name: 'Chorleywood',\n    x: 0.1074682959518906,\n    y: 0.8319321119501223,\n  },\n  54: {\n    name: 'Clapham Common',\n    x: 0.5481188311354793,\n    y: 0.1966093312868244,\n    weight: 1,\n  },\n  55: {\n    name: 'Clapham North',\n    x: 0.5579842480079779,\n    y: 0.20683412493040362,\n    weight: 1,\n  },\n  56: {\n    name: 'Clapham South',\n    x: 0.536974279711121,\n    y: 0.16659151878978445,\n    weight: 1,\n  },\n  57: {\n    weight: 2,\n    name: 'Cockfosters',\n    x: 0.5353602250461043,\n    y: 0.823062667425744,\n  },\n  58: {\n    weight: 3,\n    name: 'Colindale',\n    x: 0.418516739481957,\n    y: 0.6377248638628195,\n  },\n  59: {\n    name: 'Colliers Wood',\n    x: 0.5023822349938737,\n    y: 0.05212307321676967,\n    weight: 1,\n  },\n  60: {\n    name: 'Covent Garden',\n    x: 0.5645162002216737,\n    y: 0.3651742911181491,\n    weight: 1,\n  },\n  61: {\n    name: 'Crossharbour & London Arena',\n    x: 0.6920282303025871,\n    y: 0.3084067516607457,\n    weight: 1,\n  },\n  62: {\n    weight: 3,\n    name: 'Croxley',\n    x: 0.19694306386353647,\n    y: 0.8077788820293054,\n  },\n  63: {\n    name: 'Custom House',\n    x: 0.7407715822436557,\n    y: 0.35391353598256026,\n    weight: 1,\n  },\n  64: {\n    weight: 3,\n    name: 'Cutty Sark',\n    x: 0.6975892153412276,\n    y: 0.2655256171869944,\n  },\n  65: {\n    weight: 3,\n    name: 'Cyprus',\n    x: 0.7830045668295271,\n    y: 0.3506050132841472,\n  },\n  66: {\n    name: 'Dagenham East',\n    x: 0.9007962825533528,\n    y: 0.46864621409998364,\n    weight: 1,\n  },\n  67: {\n    name: 'Dagenham Heathway',\n    x: 0.879214885693756,\n    y: 0.4600778296474921,\n    weight: 1,\n  },\n  68: {\n    weight: 3,\n    name: 'Debden',\n    x: 0.8061506423612774,\n    y: 0.8024544927798013,\n  },\n  69: {\n    name: 'Deptford Bridge',\n    x: 0.6836601272309364,\n    y: 0.23683139299926628,\n    weight: 1,\n  },\n  70: {\n    weight: 3,\n    name: 'Devons Road',\n    x: 0.6886849254802268,\n    y: 0.396146964026544,\n  },\n  71: {\n    weight: 3,\n    name: 'Dollis Hill',\n    x: 0.4317993427094104,\n    y: 0.4942067512738047,\n  },\n  72: {\n    name: 'Ealing Broadway',\n    x: 0.3586417070955714,\n    y: 0.372821232112546,\n    weight: 1,\n  },\n  73: {\n    name: 'Ealing Common',\n    x: 0.3743050443563775,\n    y: 0.35599027805508204,\n    weight: 1,\n  },\n  74: {\n    name: \"Earl's Court\",\n    x: 0.47978460623604363,\n    y: 0.2962489759350441,\n    weight: 1,\n  },\n  75: {\n    weight: 3,\n    name: 'Eastcote',\n    x: 0.24810994080508353,\n    y: 0.5751212033161753,\n  },\n  76: {\n    name: 'East Acton',\n    x: 0.42166311042538757,\n    y: 0.37808104398051523,\n    weight: 1,\n  },\n  77: {\n    name: 'East Finchley',\n    x: 0.5173760921338229,\n    y: 0.6109548477180535,\n    weight: 1,\n  },\n  78: {\n    weight: 3,\n    name: 'East Ham',\n    x: 0.7688771065898229,\n    y: 0.4525256424933587,\n  },\n  79: {\n    weight: 3,\n    name: 'East India',\n    x: 0.7063105373604635,\n    y: 0.3532623660013555,\n  },\n  80: {\n    weight: 3,\n    name: 'East Putney',\n    x: 0.4636329348154516,\n    y: 0.1860651507756153,\n  },\n  81: {\n    weight: 2,\n    name: 'Edgware',\n    x: 0.38976740707504065,\n    y: 0.6977853518031565,\n  },\n  82: {\n    name: 'Edgware Road (B)',\n    x: 0.5139270020285565,\n    y: 0.3882805439980405,\n    weight: 1,\n  },\n  83: {\n    name: 'Edgware Road (C)',\n    x: 0.5114903951988398,\n    y: 0.3896008287721132,\n    weight: 1,\n  },\n  84: {\n    name: 'Elephant & Castle',\n    x: 0.5925833600497256,\n    y: 0.3038107454934113,\n    weight: 1,\n  },\n  85: {\n    weight: 3,\n    name: 'Elm Park',\n    x: 0.938157702080836,\n    y: 0.4861140460669651,\n  },\n  86: {\n    name: 'Elverson Road',\n    x: 0.6885310744732267,\n    y: 0.22132773540865783,\n    weight: 1,\n  },\n  87: {\n    weight: 5,\n    name: 'Embankment',\n    x: 0.5668322949099208,\n    y: 0.3470304284873035,\n  },\n  88: {\n    weight: 2,\n    name: 'Epping',\n    x: 0.841162272835125,\n    y: 0.9614060346547944,\n  },\n  89: {\n    weight: 5,\n    name: 'Euston',\n    x: 0.5536227168612564,\n    y: 0.4156489430481765,\n  },\n  90: {\n    name: 'Euston Square',\n    x: 0.5510675409176432,\n    y: 0.40839236131875467,\n    weight: 1,\n  },\n  91: {\n    weight: 3,\n    name: 'Fairlop',\n    x: 0.8146577039920233,\n    y: 0.6391892805787641,\n  },\n  92: {\n    weight: 3,\n    name: 'Farringdon',\n    x: 0.5865709474289807,\n    y: 0.38957883732624793,\n  },\n  93: {\n    name: 'Finchley Central',\n    x: 0.4846735543927569,\n    y: 0.6564960604028287,\n    weight: 1,\n  },\n  94: {\n    name: 'Finchley Road',\n    x: 0.49956664585828386,\n    y: 0.47834581237181617,\n    weight: 1,\n  },\n  95: {\n    name: 'Finsbury Park',\n    x: 0.5852274291392616,\n    y: 0.5343932583311388,\n    weight: 1,\n  },\n  96: {\n    name: 'Fulham Broadway',\n    x: 0.4824456925209508,\n    y: 0.25798019751917683,\n    weight: 1,\n  },\n  97: {\n    name: 'Gallions Reach',\n    x: 0.7918233109385561,\n    y: 0.3542309796757688,\n    weight: 1,\n  },\n  98: {\n    weight: 3,\n    name: 'Gants Hill',\n    x: 0.7857428116443366,\n    y: 0.5748857382924794,\n  },\n  99: {\n    name: 'Gloucester Road',\n    x: 0.49649777652925264,\n    y: 0.3044925224940582,\n    weight: 1,\n  },\n  100: {\n    name: 'Golders Green',\n    x: 0.4835850144085121,\n    y: 0.5614859743747286,\n    weight: 1,\n  },\n  101: {\n    name: 'Goldhawk Road',\n    x: 0.4456728705173907,\n    y: 0.3285877730870269,\n    weight: 1,\n  },\n  102: {\n    name: 'Goodge Street',\n    x: 0.5524546890975439,\n    y: 0.3902485075620186,\n    weight: 1,\n  },\n  103: {\n    name: 'Grange Hill',\n    x: 0.8159589722635753,\n    y: 0.6959176044960299,\n    weight: 1,\n  },\n  104: {\n    name: 'Great Portland Street',\n    x: 0.5417818251616495,\n    y: 0.4011377857423744,\n    weight: 1,\n  },\n  105: {\n    weight: 3,\n    name: 'Greenford',\n    x: 0.3077200715480593,\n    y: 0.4622516342951055,\n  },\n  106: {\n    weight: 3,\n    name: 'Greenwich',\n    x: 0.6914367148805732,\n    y: 0.25035381196165585,\n  },\n  107: {\n    weight: 7,\n    name: 'Green Park',\n    x: 0.5430426472913,\n    y: 0.344727440825127,\n  },\n  108: {\n    name: 'Gunnersbury',\n    x: 0.3891448828426603,\n    y: 0.29462049618725955,\n    weight: 1,\n  },\n  109: {\n    weight: 3,\n    name: 'Hainault',\n    x: 0.8171040156127395,\n    y: 0.6622755488980072,\n  },\n  110: {\n    name: 'Hammersmith',\n    x: 0.4475231404586048,\n    y: 0.3015349233357116,\n    weight: 1,\n  },\n  111: {\n    weight: 3,\n    name: 'Hampstead',\n    x: 0.5022475765939983,\n    y: 0.5100145737401002,\n  },\n  112: {\n    name: 'Hanger Lane',\n    x: 0.36840653730340056,\n    y: 0.422307460119488,\n    weight: 1,\n  },\n  113: {\n    weight: 3,\n    name: 'Harlesden',\n    x: 0.4099620385523899,\n    y: 0.4420884186234769,\n  },\n  114: {\n    name: 'Harrow & Wealdston',\n    x: 0.3199801855247442,\n    y: 0.6278773404624489,\n    weight: 1,\n  },\n  115: {\n    name: 'Harrow-on-the-Hill',\n    x: 0.31821781536234167,\n    y: 0.5843259669446867,\n    weight: 1,\n  },\n  116: {\n    name: 'Hatton Cross',\n    x: 0.21815964135634425,\n    y: 0.21348981961729238,\n    weight: 1,\n  },\n  117: {\n    name: 'Heathrow Terminals 1, 2 & 3',\n    x: 0.1836870557988313,\n    y: 0.2280151966819404,\n    weight: 1,\n  },\n  118: {\n    name: 'Heathrow Terminal 4',\n    x: 0.18925213110276795,\n    y: 0.19006674416073918,\n    weight: 1,\n  },\n  119: {\n    name: 'Hendon Central',\n    x: 0.4466970494036079,\n    y: 0.5961423635980095,\n    weight: 1,\n  },\n  120: {\n    name: 'Heron Quays',\n    x: 0.6837955117615823,\n    y: 0.33347706106271807,\n    weight: 1,\n  },\n  121: {\n    name: 'High Barnet',\n    x: 0.4834881889224314,\n    y: 0.8184767088555976,\n    weight: 1,\n  },\n  122: {\n    name: 'High Street Kensington',\n    x: 0.48536201884777763,\n    y: 0.3256085589178889,\n    weight: 1,\n  },\n  123: {\n    name: 'Highbury & Islington',\n    x: 0.588106252577362,\n    y: 0.4743554420418199,\n    weight: 1,\n  },\n  124: {\n    weight: 3,\n    name: 'Highgate',\n    x: 0.5396419616194462,\n    y: 0.5789457952061435,\n  },\n  125: {\n    weight: 3,\n    name: 'Hillingdon',\n    x: 0.18667358056838768,\n    y: 0.500246346053982,\n  },\n  126: {\n    weight: 5,\n    name: 'Holborn',\n    x: 0.569510119179786,\n    y: 0.38001736282421905,\n  },\n  127: {\n    name: 'Holland Park',\n    x: 0.4697007186437539,\n    y: 0.3473859908204214,\n    weight: 1,\n  },\n  128: {\n    name: 'Holloway Road',\n    x: 0.5774383391534094,\n    y: 0.49613090747690747,\n    weight: 1,\n  },\n  129: {\n    weight: 3,\n    name: 'Hornchurch',\n    x: 0.9621761974814265,\n    y: 0.5002875717689341,\n  },\n  130: {\n    name: 'Hounslow Central',\n    x: 0.2833956455034939,\n    y: 0.2279959070428139,\n    weight: 1,\n  },\n  131: {\n    name: 'Hounslow East',\n    x: 0.2951199410941328,\n    y: 0.23459263430361116,\n    weight: 1,\n  },\n  132: {\n    name: 'Hounslow West',\n    x: 0.2613434144676807,\n    y: 0.23492920590345237,\n    weight: 1,\n  },\n  133: {\n    name: 'Hyde Park Corner',\n    x: 0.5315507816701557,\n    y: 0.3315350069034617,\n    weight: 1,\n  },\n  134: {\n    weight: 3,\n    name: 'Ickenham',\n    x: 0.19573916753978313,\n    y: 0.526970448883973,\n  },\n  135: {\n    name: 'Island Gardens',\n    x: 0.6970118141597806,\n    y: 0.28003893528367557,\n    weight: 1,\n  },\n  136: {\n    name: 'Kennington',\n    x: 0.5865450063450609,\n    y: 0.28434965097222537,\n    weight: 1,\n  },\n  137: {\n    name: 'Kensal Green',\n    x: 0.4476732184645644,\n    y: 0.4229406612420321,\n    weight: 1,\n  },\n  138: {\n    name: 'Kensington (Olympia)',\n    x: 0.4643545794883672,\n    y: 0.3170363877680376,\n    weight: 1,\n  },\n  139: {\n    name: 'Kentish Town',\n    x: 0.5461048752719456,\n    y: 0.48987477311641286,\n    weight: 1,\n  },\n  140: {\n    weight: 3,\n    name: 'Kenton',\n    x: 0.3418978023950386,\n    y: 0.5919031431770653,\n  },\n  141: {\n    name: 'Kew Gardens',\n    x: 0.377992812551245,\n    y: 0.24678398327816678,\n    weight: 1,\n  },\n  142: {\n    weight: 3,\n    name: 'Kilburn',\n    x: 0.4712507179269805,\n    y: 0.4780263589985377,\n  },\n  143: {\n    name: 'Kilburn Park',\n    x: 0.4837701848722085,\n    y: 0.4384339898423623,\n    weight: 1,\n  },\n  144: {\n    weight: 3,\n    name: 'Kingsbury',\n    x: 0.3855400691446771,\n    y: 0.6017799595460039,\n  },\n  145: {\n    name: \"King's Cross St. Pancras\",\n    x: 0.5651136176614692,\n    y: 0.42422217988230687,\n    weight: 1,\n  },\n  146: {\n    name: 'Knightsbridge',\n    x: 0.5222660580115779,\n    y: 0.3275786862758681,\n    weight: 1,\n  },\n  147: {\n    name: 'Ladbroke Grove',\n    x: 0.46425521520647867,\n    y: 0.37938802478828526,\n    weight: 1,\n  },\n  148: {\n    name: 'Lambeth North',\n    x: 0.5793581972038504,\n    y: 0.3196476641560042,\n    weight: 1,\n  },\n  149: {\n    name: 'Lancaster Gate',\n    x: 0.5049838486304797,\n    y: 0.3618918075573396,\n    weight: 1,\n  },\n  150: {\n    name: 'Latimer Road',\n    x: 0.45670868860217656,\n    y: 0.3685034008648934,\n    weight: 1,\n  },\n  151: {\n    name: 'Leicester Square',\n    x: 0.560105139949504,\n    y: 0.35989743813658903,\n    weight: 1,\n  },\n  152: {\n    weight: 2,\n    name: 'Lewisham',\n    x: 0.6922423717714906,\n    y: 0.20945267011090632,\n  },\n  153: {\n    weight: 3,\n    name: 'Leyton',\n    x: 0.7026443906186395,\n    y: 0.5092797218192121,\n  },\n  154: {\n    name: 'Leytonstone',\n    x: 0.7184383891680197,\n    y: 0.5478654615224409,\n    weight: 1,\n  },\n  155: {\n    weight: 3,\n    name: 'Limehouse',\n    x: 0.662800635141188,\n    y: 0.3631688965871099,\n  },\n  156: {\n    name: 'Liverpool Street',\n    x: 0.61325778552368,\n    y: 0.381324542294356,\n    weight: 1,\n  },\n  157: {\n    name: 'London Bridge',\n    x: 0.6084893267586104,\n    y: 0.3397626627213534,\n    weight: 1,\n  },\n  158: {\n    weight: 3,\n    name: 'Loughton',\n    x: 0.7736586945132331,\n    y: 0.7882895363835575,\n  },\n  159: {\n    name: 'Maida Vale',\n    x: 0.49362883095744386,\n    y: 0.42160600055735864,\n    weight: 1,\n  },\n  160: {\n    name: 'Manor House',\n    x: 0.5976526860620782,\n    y: 0.5574792227962447,\n    weight: 1,\n  },\n  161: {\n    name: 'Mansion House',\n    x: 0.5996761882418394,\n    y: 0.3628556859419225,\n    weight: 1,\n  },\n  162: {\n    weight: 3,\n    name: 'Marble Arch',\n    x: 0.52471345683668,\n    y: 0.3674944504914411,\n  },\n  163: {\n    weight: 3,\n    name: 'Marylebone',\n    x: 0.5194997887034322,\n    y: 0.3968560026385393,\n  },\n  164: {\n    weight: 5,\n    name: 'Mile End',\n    x: 0.6702381109738366,\n    y: 0.40472831921777724,\n  },\n  165: {\n    name: 'Mill Hill East',\n    x: 0.4648415808405323,\n    y: 0.679599350091276,\n    weight: 1,\n  },\n  166: {\n    weight: 3,\n    name: 'Monument',\n    x: 0.6086100398242181,\n    y: 0.3582351692354878,\n  },\n  167: {\n    weight: 5,\n    name: 'Moorgate',\n    x: 0.6059480604000616,\n    y: 0.38396552535198036,\n  },\n  168: {\n    weight: 4,\n    name: 'Moor Park',\n    x: 0.2075830145547803,\n    y: 0.7496963538505279,\n  },\n  169: {\n    weight: 2,\n    name: 'Morden',\n    x: 0.4826524036200068,\n    y: 0,\n  },\n  170: {\n    name: 'Mornington Crescent',\n    x: 0.5478267975169627,\n    y: 0.435443654171585,\n    weight: 1,\n  },\n  171: {\n    weight: 3,\n    name: 'Mudchute',\n    x: 0.6919083977465897,\n    y: 0.2902651991858479,\n  },\n  172: {\n    weight: 3,\n    name: 'Neasden',\n    x: 0.4183399547452827,\n    y: 0.50147012929277,\n  },\n  173: {\n    name: 'Newbury Park',\n    x: 0.8131224618265297,\n    y: 0.5719067362734961,\n    weight: 1,\n  },\n  174: {\n    weight: 2,\n    name: 'New Cross',\n    x: 0.670781768880025,\n    y: 0.24573956500576985,\n  },\n  175: {\n    name: 'New Cross Gate',\n    x: 0.6620785182167327,\n    y: 0.24244255736399636,\n    weight: 1,\n  },\n  176: {\n    name: 'Northfields',\n    x: 0.3441194548303449,\n    y: 0.3210259503335459,\n    weight: 1,\n  },\n  177: {\n    weight: 3,\n    name: 'Northolt',\n    x: 0.28091643424803076,\n    y: 0.4820590111276666,\n  },\n  178: {\n    name: 'Northwick Park',\n    x: 0.33933949666324126,\n    y: 0.5813464326264121,\n    weight: 1,\n  },\n  179: {\n    weight: 3,\n    name: 'Northwood',\n    x: 0.21683182852728777,\n    y: 0.6893059607943098,\n  },\n  180: {\n    name: 'Northwood Hills',\n    x: 0.23399008997365262,\n    y: 0.6539896560707074,\n    weight: 1,\n  },\n  181: {\n    name: 'North Acton',\n    x: 0.4073951485916321,\n    y: 0.4008496295272597,\n    weight: 1,\n  },\n  182: {\n    name: 'North Ealing',\n    x: 0.37373189841636967,\n    y: 0.38040499387382404,\n    weight: 1,\n  },\n  183: {\n    name: 'North Greenwich',\n    x: 0.7132655832987369,\n    y: 0.32423454852824635,\n    weight: 1,\n  },\n  184: {\n    name: 'North Harrow',\n    x: 0.2880498790977815,\n    y: 0.6018278859857373,\n    weight: 1,\n  },\n  185: {\n    name: 'North Wembley',\n    x: 0.3567244715123834,\n    y: 0.5275594425389367,\n    weight: 1,\n  },\n  186: {\n    name: 'Notting Hill Gate',\n    x: 0.4804951597803598,\n    y: 0.35365115926876944,\n    weight: 1,\n  },\n  187: {\n    weight: 3,\n    name: 'Oakwood',\n    x: 0.5560063039631592,\n    y: 0.8095247856503804,\n  },\n  188: {\n    weight: 3,\n    name: 'Old Street',\n    x: 0.6074638775018144,\n    y: 0.4093648602519192,\n  },\n  190: {\n    weight: 3,\n    name: 'Osterley',\n    x: 0.3000001871024231,\n    y: 0.2609873781401315,\n  },\n  191: {\n    weight: 3,\n    name: 'Oval',\n    x: 0.577605425079025,\n    y: 0.2629097117321204,\n  },\n  192: {\n    name: 'Oxford Circus',\n    x: 0.544558538710622,\n    y: 0.3721072895964468,\n    weight: 1,\n  },\n  193: {\n    weight: 6,\n    name: 'Paddington',\n    x: 0.5051031074335084,\n    y: 0.3734380060579222,\n  },\n  194: {\n    name: 'Park Royal',\n    x: 0.37908051308836915,\n    y: 0.41174622917044046,\n    weight: 1,\n  },\n  195: {\n    name: 'Parsons Green',\n    x: 0.47536331769742796,\n    y: 0.24115672055128462,\n    weight: 1,\n  },\n  196: {\n    weight: 3,\n    name: 'Perivale',\n    x: 0.33371149821399776,\n    y: 0.44343534236695276,\n  },\n  197: {\n    name: 'Picadilly Circus',\n    x: 0.5530251527885097,\n    y: 0.3549511428839318,\n    weight: 1,\n  },\n  198: {\n    weight: 3,\n    name: 'Pimlico',\n    x: 0.5539374037660718,\n    y: 0.2873254822154383,\n  },\n  199: {\n    weight: 3,\n    name: 'Pinner',\n    x: 0.2672876188675453,\n    y: 0.6282347602812857,\n  },\n  200: {\n    weight: 3,\n    name: 'Plaistow',\n    x: 0.7287238679937889,\n    y: 0.4258212752142736,\n  },\n  201: {\n    weight: 5,\n    name: 'Poplar',\n    x: 0.6886723710948788,\n    y: 0.34798920421074264,\n  },\n  202: {\n    name: 'Preston Road',\n    x: 0.3660233664128176,\n    y: 0.5602184037119416,\n    weight: 1,\n  },\n  203: {\n    name: 'Prince Regent',\n    x: 0.7477331171449959,\n    y: 0.35325216299877504,\n    weight: 1,\n  },\n  204: {\n    name: 'Pudding Mill Lane',\n    x: 0.6926415301498264,\n    y: 0.4357274701699893,\n    weight: 1,\n  },\n  205: {\n    name: 'Putney Bridge',\n    x: 0.4663070794875242,\n    y: 0.2177353651004969,\n    weight: 1,\n  },\n  206: {\n    name: \"Queen's Park\",\n    x: 0.47123570826361,\n    y: 0.43513923205602933,\n    weight: 1,\n  },\n  207: {\n    weight: 3,\n    name: 'Queensbury',\n    x: 0.3768514559214675,\n    y: 0.6334570380014619,\n  },\n  208: {\n    weight: 3,\n    name: 'Queensway',\n    x: 0.4909408371474605,\n    y: 0.3579369570333932,\n  },\n  209: {\n    name: 'Ravenscourt Park',\n    x: 0.4349896873118932,\n    y: 0.30351735091055554,\n    weight: 1,\n  },\n  210: {\n    name: 'Rayners Lane',\n    x: 0.27782131945472377,\n    y: 0.5711474279072071,\n    weight: 1,\n  },\n  211: {\n    weight: 3,\n    name: 'Redbridge',\n    x: 0.761493897606695,\n    y: 0.574235597311836,\n  },\n  212: {\n    name: \"Regent's Park\",\n    x: 0.5386482231331715,\n    y: 0.39981919841341623,\n    weight: 1,\n  },\n  213: {\n    weight: 2,\n    name: 'Richmond',\n    x: 0.3590665868470996,\n    y: 0.20158731784718323,\n  },\n  214: {\n    name: 'Rickmansworth',\n    x: 0.15966962117482983,\n    y: 0.7860258543744434,\n    weight: 1,\n  },\n  215: {\n    name: 'Roding Valley',\n    x: 0.7598121779130403,\n    y: 0.7088075578102946,\n    weight: 1,\n  },\n  216: {\n    name: 'Rotherhithe',\n    x: 0.6478229115488091,\n    y: 0.32589893282470067,\n    weight: 1,\n  },\n  217: {\n    name: 'Royal Albert',\n    x: 0.7626999391755402,\n    y: 0.3502800464376818,\n    weight: 1,\n  },\n  218: {\n    weight: 3,\n    name: 'Royal Oak',\n    x: 0.49060042828333017,\n    y: 0.3853184192197766,\n  },\n  219: {\n    name: 'Royal Victoria',\n    x: 0.7297485103429083,\n    y: 0.352596893701482,\n    weight: 1,\n  },\n  220: {\n    weight: 3,\n    name: 'Ruislip',\n    x: 0.21989699574081661,\n    y: 0.558636535767942,\n  },\n  221: {\n    name: 'Ruislip Gardens',\n    x: 0.23264853033580157,\n    y: 0.5226642848269789,\n    weight: 1,\n  },\n  222: {\n    name: 'Ruislip Manor',\n    x: 0.23011392637483288,\n    y: 0.5642410963548762,\n    weight: 1,\n  },\n  223: {\n    name: 'Russell Square',\n    x: 0.5644095496350711,\n    y: 0.3984919523865136,\n    weight: 1,\n  },\n  224: {\n    name: 'Seven Sisters',\n    x: 0.6219192854945452,\n    y: 0.5937543155402122,\n    weight: 1,\n  },\n  225: {\n    weight: 6,\n    name: 'Shadwell',\n    x: 0.643770289583568,\n    y: 0.3611947220850773,\n  },\n  226: {\n    name: \"Shepherd's Bush (C)\",\n    x: 0.45495953930810484,\n    y: 0.3378227291114187,\n    weight: 1,\n  },\n  227: {\n    name: \"Shepherd's Bush (H)\",\n    x: 0.4459084030906426,\n    y: 0.341784009511769,\n    weight: 1,\n  },\n  228: {\n    weight: 2,\n    name: 'Shoreditch',\n    x: 0.6266066997432223,\n    y: 0.3974840844641592,\n  },\n  229: {\n    name: 'Sloane Square',\n    x: 0.5271330000952944,\n    y: 0.29755778141913597,\n    weight: 1,\n  },\n  230: {\n    weight: 3,\n    name: 'Snaresbrook',\n    x: 0.733886030567213,\n    y: 0.5890892360958851,\n  },\n  231: {\n    name: 'Southfields',\n    x: 0.4689659081164511,\n    y: 0.14251739486210244,\n    weight: 1,\n  },\n  232: {\n    weight: 3,\n    name: 'Southgate',\n    x: 0.5603861537982795,\n    y: 0.7587207553655957,\n  },\n  233: {\n    weight: 3,\n    name: 'Southwark',\n    x: 0.5866703263882462,\n    y: 0.32591350000439034,\n  },\n  234: {\n    name: 'South Ealing',\n    x: 0.35224525155272274,\n    y: 0.3263027417203798,\n    weight: 1,\n  },\n  235: {\n    name: 'South Harrow',\n    x: 0.30020586263268917,\n    y: 0.535832534694421,\n    weight: 1,\n  },\n  236: {\n    name: 'South Kensington',\n    x: 0.5070579620663401,\n    y: 0.3031704912949258,\n    weight: 1,\n  },\n  237: {\n    name: 'South Kenton',\n    x: 0.35128113017950513,\n    y: 0.5539563763178516,\n    weight: 1,\n  },\n  238: {\n    weight: 3,\n    name: 'South Quay',\n    x: 0.6865783308160024,\n    y: 0.3249003501656628,\n  },\n  239: {\n    name: 'South Ruislip',\n    x: 0.24599139826315217,\n    y: 0.5104498118940372,\n    weight: 1,\n  },\n  240: {\n    name: 'South Wimbledon',\n    x: 0.48601864901364394,\n    y: 0.043546406293792674,\n    weight: 1,\n  },\n  241: {\n    name: 'South Woodford',\n    x: 0.7407464472460563,\n    y: 0.6250385442429984,\n    weight: 1,\n  },\n  242: {\n    name: 'Stamford Brook',\n    x: 0.42338472728900894,\n    y: 0.3061594344577733,\n    weight: 1,\n  },\n  243: {\n    weight: 2,\n    name: 'Stanmore',\n    x: 0.35751502782063627,\n    y: 0.716609555088964,\n  },\n  244: {\n    name: 'Stepney Green',\n    x: 0.6542227548960061,\n    y: 0.39549700423242956,\n    weight: 1,\n  },\n  245: {\n    weight: 5,\n    name: 'Stockwell',\n    x: 0.5659952920744471,\n    y: 0.2312437873290517,\n  },\n  246: {\n    name: 'Stonebridge Park',\n    x: 0.38861672937678515,\n    y: 0.4674999793321184,\n    weight: 1,\n  },\n  247: {\n    weight: 5,\n    name: 'Stratford',\n    x: 0.7039040250100941,\n    y: 0.4598026325578796,\n  },\n  248: {\n    name: \"St. James's Park\",\n    x: 0.5538288688779185,\n    y: 0.32064339580743395,\n    weight: 1,\n  },\n  249: {\n    name: \"St. John's Wood\",\n    x: 0.5068633298078201,\n    y: 0.4371066432893422,\n    weight: 1,\n  },\n  250: {\n    weight: 3,\n    name: \"St. Paul's\",\n    x: 0.5958489758292619,\n    y: 0.3707735853279784,\n  },\n  251: {\n    name: 'Sudbury Hill',\n    x: 0.31818493103438783,\n    y: 0.5104190924128841,\n    weight: 1,\n  },\n  252: {\n    name: 'Sudbury Town',\n    x: 0.34254973813582323,\n    y: 0.48995294933101147,\n    weight: 1,\n  },\n  253: {\n    name: 'Surrey Quays',\n    x: 0.6532709563768069,\n    y: 0.3004987417457218,\n    weight: 1,\n  },\n  254: {\n    name: 'Swiss Cottage',\n    x: 0.5071049831697654,\n    y: 0.4651473739905001,\n    weight: 1,\n  },\n  255: {\n    weight: 3,\n    name: 'Temple',\n    x: 0.5763509640733023,\n    y: 0.35923332757631005,\n  },\n  256: {\n    name: 'Theydon Bois',\n    x: 0.8288213414547169,\n    y: 0.8888542442025891,\n    weight: 1,\n  },\n  257: {\n    name: 'Tooting Bec',\n    x: 0.5232748969692074,\n    y: 0.11183190109536831,\n    weight: 1,\n  },\n  258: {\n    name: 'Tooting Broadway',\n    x: 0.5137567704501679,\n    y: 0.08346217046253339,\n    weight: 1,\n  },\n  259: {\n    name: 'Tottenham Court Road',\n    x: 0.5567445540405956,\n    y: 0.37705207418261416,\n    weight: 1,\n  },\n  260: {\n    name: 'Tottenham Hale',\n    x: 0.6399130353834641,\n    y: 0.6135381190613042,\n    weight: 1,\n  },\n  261: {\n    name: 'Totteridge & Whetstone',\n    x: 0.5010868242060422,\n    y: 0.752156959314566,\n    weight: 1,\n  },\n  262: {\n    name: 'Tower Gateway',\n    x: 0.6225345266735358,\n    y: 0.357571793951638,\n    weight: 1,\n  },\n  263: {\n    weight: 4,\n    name: 'Tower Hill',\n    x: 0.619864966566508,\n    y: 0.35493357839292144,\n  },\n  264: {\n    name: 'Tufnell Park',\n    x: 0.5493614187491169,\n    y: 0.5096664559376072,\n    weight: 1,\n  },\n  265: {\n    name: 'Turnham Green',\n    x: 0.41317180320813923,\n    y: 0.30649182646843864,\n    weight: 1,\n  },\n  266: {\n    name: 'Turnpike Lane',\n    x: 0.5895573286087923,\n    y: 0.6208179016983123,\n    weight: 1,\n  },\n  267: {\n    weight: 2,\n    name: 'Upminster',\n    x: 1,\n    y: 0.5170946274428322,\n  },\n  268: {\n    name: 'Upminster Bridge',\n    x: 0.9806259883506483,\n    y: 0.5144625332513006,\n    weight: 1,\n  },\n  269: {\n    weight: 3,\n    name: 'Upney',\n    x: 0.826423436279437,\n    y: 0.44953970030146184,\n  },\n  270: {\n    weight: 3,\n    name: 'Upton Park',\n    x: 0.748568399707593,\n    y: 0.4386789361408223,\n  },\n  271: {\n    weight: 2,\n    name: 'Uxbridge',\n    x: 0.15334877248138584,\n    y: 0.4755117517457492,\n  },\n  272: {\n    weight: 3,\n    name: 'Vauxhall',\n    x: 0.5633348095154075,\n    y: 0.2767673725388339,\n  },\n  273: {\n    weight: 5,\n    name: 'Victoria',\n    x: 0.5408295615043758,\n    y: 0.3110799149872963,\n  },\n  274: {\n    name: 'Walthamstow Central',\n    x: 0.6862019084311477,\n    y: 0.5963656365597021,\n    weight: 1,\n  },\n  275: {\n    weight: 3,\n    name: 'Wanstead',\n    x: 0.7422354702137094,\n    y: 0.5782012505643623,\n  },\n  276: {\n    weight: 3,\n    name: 'Wapping',\n    x: 0.6439962783790599,\n    y: 0.3367851544002806,\n  },\n  277: {\n    name: 'Warren Street',\n    x: 0.5481651509248777,\n    y: 0.40410479166447516,\n    weight: 1,\n  },\n  278: {\n    name: 'Warwick Avenue',\n    x: 0.49582706367313506,\n    y: 0.40016213200667944,\n    weight: 1,\n  },\n  279: {\n    weight: 7,\n    name: 'Waterloo',\n    x: 0.5761125743881286,\n    y: 0.33449279318849867,\n  },\n  280: {\n    weight: 2,\n    name: 'Watford',\n    x: 0.2242423628007906,\n    y: 0.8417467037174753,\n  },\n  281: {\n    name: 'Wembley Central',\n    x: 0.3649509286674641,\n    y: 0.49390318675738143,\n    weight: 1,\n  },\n  282: {\n    name: 'Wembley Park',\n    x: 0.3844642809259675,\n    y: 0.532166571356218,\n    weight: 1,\n  },\n  283: {\n    name: 'Westbourne Park',\n    x: 0.47539983802137137,\n    y: 0.39192093909704834,\n    weight: 1,\n  },\n  284: {\n    weight: 4,\n    name: 'Westferry',\n    x: 0.6779989418440951,\n    y: 0.35458884737172,\n  },\n  285: {\n    weight: 5,\n    name: 'Westminster',\n    x: 0.5632297059580245,\n    y: 0.325919183018576,\n  },\n  286: {\n    name: 'West Acton',\n    x: 0.38278505117169076,\n    y: 0.38205184436612394,\n    weight: 1,\n  },\n  287: {\n    name: 'West Brompton',\n    x: 0.4821021469812801,\n    y: 0.2804133363547219,\n    weight: 1,\n  },\n  288: {\n    name: 'West Finchley',\n    x: 0.4903737019364315,\n    y: 0.6838745780687914,\n    weight: 1,\n  },\n  289: {\n    weight: 5,\n    name: 'West Ham',\n    x: 0.7152619949591895,\n    y: 0.4172494006804529,\n  },\n  290: {\n    name: 'West Hampstead',\n    x: 0.48761337698706325,\n    y: 0.4773605177881855,\n    weight: 1,\n  },\n  291: {\n    name: 'West Harrow',\n    x: 0.29883564436509863,\n    y: 0.5849952102758988,\n    weight: 1,\n  },\n  292: {\n    name: 'West India Quay',\n    x: 0.6851908200534459,\n    y: 0.34568112444782045,\n    weight: 1,\n  },\n  293: {\n    name: 'West Kensington',\n    x: 0.46910686790289974,\n    y: 0.2919627078919465,\n    weight: 1,\n  },\n  294: {\n    weight: 2,\n    name: 'West Ruislip',\n    x: 0.2009741612905811,\n    y: 0.55237607438482,\n  },\n  295: {\n    name: 'Whitechapel',\n    x: 0.637743184507455,\n    y: 0.38659549740344773,\n    weight: 1,\n  },\n  296: {\n    name: 'White City',\n    x: 0.44893136917695015,\n    y: 0.36223741337599424,\n    weight: 1,\n  },\n  297: {\n    name: 'Willesden Green',\n    x: 0.4517568031811582,\n    y: 0.4849616420921459,\n    weight: 1,\n  },\n  298: {\n    name: 'Willesden Junction',\n    x: 0.42121535475240474,\n    y: 0.4302075735215753,\n    weight: 1,\n  },\n  299: {\n    name: 'Wimbledon',\n    x: 0.46919176342353375,\n    y: 0.06334105212259727,\n    weight: 1,\n  },\n  300: {\n    name: 'Wimbledon Park',\n    x: 0.4775503635541449,\n    y: 0.10589763636810119,\n    weight: 1,\n  },\n  301: {\n    weight: 4,\n    name: 'Woodford',\n    x: 0.7484264000154587,\n    y: 0.6754998569136055,\n  },\n  302: {\n    name: 'Woodside Park',\n    x: 0.4935215697393758,\n    y: 0.7115841563629692,\n    weight: 1,\n  },\n  303: {\n    weight: 3,\n    name: 'Wood Green',\n    x: 0.581561647160758,\n    y: 0.6442426047219271,\n  },\n};\n\nconst graphdata = {\n  1: { 73: 0.69, 234: 0.69, 265: 0.69, 52: 1.0 },\n  2: { 156: 1.0, 263: 1.0 },\n  3: { 263: 1.0, 295: 1.0, 156: 1.0 },\n  4: { 70: 0.69, 201: 0.69 },\n  5: { 194: 0.69, 252: 0.69 },\n  6: { 46: 1.0 },\n  7: { 145: 0.25, 188: 0.25 },\n  8: { 124: 0.25, 264: 0.25 },\n  9: { 31: 0.69, 232: 0.69 },\n  10: { 95: 0.69, 128: 0.69 },\n  11: {\n    163: 0.69,\n    212: 0.69,\n    83: 1.0,\n    104: 1.0,\n    28: 0.68,\n    249: 0.68,\n    94: 1.0,\n  },\n  12: { 56: 0.25, 257: 0.25 },\n  13: { 156: 0.68, 250: 0.68, 225: 0.69, 157: 0.25, 167: 0.25, 279: 0.68 },\n  14: { 92: 1.0, 167: 1.0 },\n  15: { 78: 1.0, 269: 1.0 },\n  16: { 91: 0.68, 173: 0.68 },\n  17: { 110: 0.69, 293: 1.0, 74: 0.69 },\n  18: { 186: 1.0, 193: 1.0 },\n  19: { 97: 0.69 },\n  20: { 65: 0.69, 217: 0.69 },\n  21: { 67: 1.0, 269: 1.0 },\n  22: { 47: 0.25, 111: 0.25 },\n  23: { 41: 0.68, 157: 0.68 },\n  24: { 156: 0.68, 164: 0.68 },\n  25: { 161: 1.0, 255: 1.0 },\n  26: { 260: 0.2, 274: 0.2 },\n  27: { 79: 0.69, 201: 0.69 },\n  28: { 162: 0.68, 192: 0.68, 107: 0.68, 11: 0.68 },\n  29: { 84: 0.25, 157: 0.25 },\n  30: { 176: 0.69, 190: 0.69 },\n  31: { 303: 0.69, 9: 0.69 },\n  32: { 70: 0.69, 204: 0.69 },\n  33: { 36: 1.0, 164: 1.0 },\n  34: { 100: 0.25, 119: 0.25 },\n  35: { 245: 0.2 },\n  36: { 289: 1.0, 33: 1.0 },\n  37: { 158: 0.68, 301: 0.68 },\n  38: { 58: 0.25, 81: 0.25 },\n  39: { 128: 0.69, 145: 0.69 },\n  40: { 47: 0.25, 89: 0.25, 139: 0.25, 170: 0.25 },\n  41: { 216: 0.69, 253: 0.69, 42: 0.68, 23: 0.68 },\n  42: { 120: 0.69, 292: 0.69, 183: 0.68, 41: 0.68 },\n  43: { 79: 0.69, 219: 0.69, 183: 0.68, 289: 0.68 },\n  44: { 161: 1.0, 166: 1.0 },\n  45: { 207: 0.68, 243: 0.68 },\n  46: { 50: 1.0, 53: 1.0, 6: 1.0 },\n  47: { 22: 0.25, 40: 0.25 },\n  48: { 126: 0.68, 250: 0.68 },\n  49: { 87: 0.25, 197: 0.69, 151: 0.25 },\n  50: { 46: 1.0 },\n  51: { 103: 0.68, 215: 0.68 },\n  52: { 1: 1.0, 265: 1.0 },\n  53: { 214: 1.0, 46: 1.0 },\n  54: { 55: 0.25, 56: 0.25 },\n  55: { 245: 0.25, 54: 0.25 },\n  56: { 12: 0.25, 54: 0.25 },\n  57: { 187: 0.69 },\n  58: { 119: 0.25, 38: 0.25 },\n  59: { 240: 0.25, 258: 0.25 },\n  60: { 126: 0.69, 151: 0.69 },\n  61: { 171: 0.69, 238: 0.69 },\n  62: { 168: 1.0, 280: 1.0 },\n  63: { 203: 0.69, 219: 0.69 },\n  64: { 106: 0.69, 135: 0.69 },\n  65: { 97: 0.69, 20: 0.69 },\n  66: { 67: 1.0, 85: 1.0 },\n  67: { 21: 1.0, 66: 1.0 },\n  68: { 158: 0.68, 256: 0.68 },\n  69: { 86: 0.69, 106: 0.69 },\n  70: { 4: 0.69, 32: 0.69 },\n  71: { 172: 0.68, 297: 0.68 },\n  72: { 286: 0.68, 73: 1.0 },\n  73: { 1: 0.69, 182: 0.69, 72: 1.0 },\n  74: { 99: 0.69, 122: 1.0, 138: 1.0, 287: 1.0, 293: 1.0, 17: 0.69 },\n  75: { 210: 0.69, 222: 0.69 },\n  76: { 181: 0.68, 296: 0.68 },\n  77: { 93: 0.25, 124: 0.25 },\n  78: { 270: 1.0, 15: 1.0 },\n  79: { 27: 0.69, 43: 0.69 },\n  80: { 205: 1.0, 231: 1.0 },\n  81: { 38: 0.25 },\n  82: { 163: 0.69, 193: 0.69 },\n  83: { 193: 1.0, 11: 1.0 },\n  84: { 148: 0.69, 136: 0.25, 29: 0.25 },\n  85: { 129: 1.0, 66: 1.0 },\n  86: { 152: 0.69, 69: 0.69 },\n  87: { 279: 0.25, 255: 1.0, 285: 1.0, 49: 0.25 },\n  88: { 256: 0.68 },\n  89: { 145: 0.2, 170: 0.25, 277: 0.2, 40: 0.25 },\n  90: { 104: 1.0, 145: 1.0 },\n  91: { 109: 0.68, 16: 0.68 },\n  92: { 145: 1.0, 14: 1.0 },\n  93: { 165: 0.25, 288: 0.25, 77: 0.25 },\n  94: { 254: 0.68, 290: 0.68, 282: 1.0, 11: 1.0 },\n  95: { 160: 0.69, 123: 0.2, 224: 0.2, 10: 0.69 },\n  96: { 195: 1.0, 287: 1.0 },\n  97: { 19: 0.69, 65: 0.69 },\n  98: { 173: 0.68, 211: 0.68 },\n  99: { 122: 1.0, 236: 0.69, 74: 0.69 },\n  100: { 111: 0.25, 34: 0.25 },\n  101: { 110: 1.0, 227: 1.0 },\n  102: { 259: 0.25, 277: 0.25 },\n  103: { 109: 0.68, 51: 0.68 },\n  104: { 11: 1.0, 90: 1.0 },\n  105: { 177: 0.68, 196: 0.68 },\n  106: { 64: 0.69, 69: 0.69 },\n  107: { 285: 0.68, 133: 0.69, 197: 0.69, 192: 0.2, 273: 0.2, 28: 0.68 },\n  108: { 141: 1.0, 265: 1.0 },\n  109: { 91: 0.68, 103: 0.68 },\n  110: { 209: 1.0, 265: 0.69, 17: 0.69, 101: 1.0 },\n  111: { 22: 0.25, 100: 0.25 },\n  112: { 181: 0.68, 196: 0.68 },\n  113: { 246: 0.69, 298: 0.69 },\n  114: { 140: 0.69 },\n  115: { 178: 1.0, 184: 1.0, 291: 1.0 },\n  116: { 117: 0.69, 118: 0.69, 132: 0.69 },\n  117: { 118: 0.69, 116: 0.69 },\n  118: { 116: 0.69, 117: 0.69 },\n  119: { 34: 0.25, 58: 0.25 },\n  120: { 238: 0.69, 42: 0.69 },\n  121: { 261: 0.25 },\n  122: { 186: 1.0, 74: 1.0, 99: 1.0 },\n  123: { 145: 0.2, 95: 0.2 },\n  124: { 8: 0.25, 77: 0.25 },\n  125: { 134: 0.69, 271: 0.69 },\n  126: { 259: 0.68, 223: 0.69, 48: 0.68, 60: 0.69 },\n  127: { 186: 0.68, 226: 0.68 },\n  128: { 10: 0.69, 39: 0.69 },\n  129: { 268: 1.0, 85: 1.0 },\n  130: { 131: 0.69, 132: 0.69 },\n  131: { 190: 0.69, 130: 0.69 },\n  132: { 116: 0.69, 130: 0.69 },\n  133: { 146: 0.69, 107: 0.69 },\n  134: { 220: 0.69, 125: 0.69 },\n  135: { 171: 0.69, 64: 0.69 },\n  136: { 191: 0.25, 279: 0.25, 84: 0.25 },\n  137: { 206: 0.69, 298: 0.69 },\n  138: { 74: 1.0 },\n  139: { 264: 0.25, 40: 0.25 },\n  140: { 237: 0.69, 114: 0.69 },\n  141: { 213: 1.0, 108: 1.0 },\n  142: { 290: 0.68, 297: 0.68 },\n  143: { 159: 0.69, 206: 0.69 },\n  144: { 207: 0.68, 282: 0.68 },\n  145: { 223: 0.69, 7: 0.25, 39: 0.69, 89: 0.2, 90: 1.0, 92: 1.0, 123: 0.2 },\n  146: { 236: 0.69, 133: 0.69 },\n  147: { 150: 1.0, 283: 1.0 },\n  148: { 279: 0.69, 84: 0.69 },\n  149: { 162: 0.68, 208: 0.68 },\n  150: { 227: 1.0, 147: 1.0 },\n  151: { 259: 0.25, 197: 0.69, 49: 0.25, 60: 0.69 },\n  152: { 86: 0.69 },\n  153: { 154: 0.68, 247: 0.68 },\n  154: { 230: 0.68, 275: 0.68, 153: 0.68 },\n  155: { 225: 0.69, 284: 0.69 },\n  156: { 167: 1.0, 2: 1.0, 3: 1.0, 13: 0.68, 24: 0.68 },\n  157: { 233: 0.68, 13: 0.25, 23: 0.68, 29: 0.25 },\n  158: { 37: 0.68, 68: 0.68 },\n  159: { 278: 0.69, 143: 0.69 },\n  160: { 266: 0.69, 95: 0.69 },\n  161: { 25: 1.0, 44: 1.0 },\n  162: { 28: 0.68, 149: 0.68 },\n  163: { 11: 0.69, 82: 0.69 },\n  164: { 247: 0.68, 244: 1.0, 24: 0.68, 33: 1.0 },\n  165: { 93: 0.25 },\n  166: { 263: 1.0, 44: 1.0 },\n  167: { 188: 0.25, 13: 0.25, 14: 1.0, 156: 1.0 },\n  168: { 179: 1.0, 214: 1.0, 62: 1.0 },\n  169: { 240: 0.25 },\n  170: { 40: 0.25, 89: 0.25 },\n  171: { 61: 0.69, 135: 0.69 },\n  172: { 282: 0.68, 71: 0.68 },\n  173: { 16: 0.68, 98: 0.68 },\n  174: { 253: 0.69 },\n  175: { 253: 0.69 },\n  176: { 234: 0.69, 30: 0.69 },\n  177: { 239: 0.68, 105: 0.68 },\n  178: { 202: 1.0, 115: 1.0 },\n  179: { 180: 1.0, 168: 1.0 },\n  180: { 199: 1.0, 179: 1.0 },\n  181: { 286: 0.68, 76: 0.68, 112: 0.68 },\n  182: { 194: 0.69, 73: 0.69 },\n  183: { 42: 0.68, 43: 0.68 },\n  184: { 199: 1.0, 115: 1.0 },\n  185: { 237: 0.69, 281: 0.69 },\n  186: { 208: 0.68, 18: 1.0, 122: 1.0, 127: 0.68 },\n  187: { 232: 0.69, 57: 0.69 },\n  188: { 7: 0.25, 167: 0.25 },\n  // 189: {},\n  190: { 30: 0.69, 131: 0.69 },\n  191: { 245: 0.25, 136: 0.25 },\n  192: { 197: 0.69, 212: 0.69, 259: 0.68, 277: 0.2, 28: 0.68, 107: 0.2 },\n  193: { 278: 0.69, 218: 1.0, 18: 1.0, 82: 0.69, 83: 1.0 },\n  194: { 5: 0.69, 182: 0.69 },\n  195: { 205: 1.0, 96: 1.0 },\n  196: { 105: 0.68, 112: 0.68 },\n  197: { 49: 0.69, 107: 0.69, 151: 0.69, 192: 0.69 },\n  198: { 272: 0.2, 273: 0.2 },\n  199: { 180: 1.0, 184: 1.0 },\n  200: { 270: 1.0, 289: 1.0 },\n  201: { 284: 0.69, 292: 0.69, 4: 0.69, 27: 0.69 },\n  202: { 282: 1.0, 178: 1.0 },\n  203: { 217: 0.69, 63: 0.69 },\n  204: { 247: 0.69, 32: 0.69 },\n  205: { 80: 1.0, 195: 1.0 },\n  206: { 137: 0.69, 143: 0.69 },\n  207: { 45: 0.68, 144: 0.68 },\n  208: { 149: 0.68, 186: 0.68 },\n  209: { 242: 1.0, 110: 1.0 },\n  210: { 291: 1.0, 235: 0.69, 75: 0.69 },\n  211: { 275: 0.68, 98: 0.68 },\n  212: { 11: 0.69, 192: 0.69 },\n  213: { 141: 1.0 },\n  214: { 53: 1.0, 168: 1.0 },\n  215: { 301: 0.68, 51: 0.68 },\n  216: { 276: 0.69, 41: 0.69 },\n  217: { 20: 0.69, 203: 0.69 },\n  218: { 283: 1.0, 193: 1.0 },\n  219: { 43: 0.69, 63: 0.69 },\n  220: { 222: 0.69, 134: 0.69 },\n  221: { 239: 0.68, 294: 0.68 },\n  222: { 75: 0.69, 220: 0.69 },\n  223: { 126: 0.69, 145: 0.69 },\n  224: { 260: 0.2, 95: 0.2 },\n  225: { 262: 0.69, 276: 0.69, 295: 0.69, 13: 0.69, 155: 0.69 },\n  226: { 296: 0.68, 127: 0.68 },\n  227: { 101: 1.0, 150: 1.0 },\n  228: { 295: 0.69 },\n  229: { 236: 1.0, 273: 1.0 },\n  230: { 241: 0.68, 154: 0.68 },\n  231: { 300: 1.0, 80: 1.0 },\n  232: { 9: 0.69, 187: 0.69 },\n  233: { 279: 0.68, 157: 0.68 },\n  234: { 1: 0.69, 176: 0.69 },\n  235: { 251: 0.69, 210: 0.69 },\n  236: { 99: 0.69, 146: 0.69, 229: 1.0 },\n  237: { 140: 0.69, 185: 0.69 },\n  238: { 61: 0.69, 120: 0.69 },\n  239: { 177: 0.68, 221: 0.68 },\n  240: { 59: 0.25, 169: 0.25 },\n  241: { 301: 0.68, 230: 0.68 },\n  242: { 265: 1.0, 209: 1.0 },\n  243: { 45: 0.68 },\n  244: { 295: 1.0, 164: 1.0 },\n  245: { 272: 0.2, 35: 0.2, 55: 0.25, 191: 0.25 },\n  246: { 281: 0.69, 113: 0.69 },\n  247: { 289: 0.68, 153: 0.68, 164: 0.68, 204: 0.69 },\n  248: { 273: 1.0, 285: 1.0 },\n  249: { 254: 0.68, 11: 0.68 },\n  250: { 13: 0.68, 48: 0.68 },\n  251: { 252: 0.69, 235: 0.69 },\n  252: { 5: 0.69, 251: 0.69 },\n  253: { 41: 0.69, 174: 0.69, 175: 0.69 },\n  254: { 94: 0.68, 249: 0.68 },\n  255: { 25: 1.0, 87: 1.0 },\n  256: { 68: 0.68, 88: 0.68 },\n  257: { 258: 0.25, 12: 0.25 },\n  258: { 59: 0.25, 257: 0.25 },\n  259: { 102: 0.25, 126: 0.68, 151: 0.25, 192: 0.68 },\n  260: { 26: 0.2, 224: 0.2 },\n  261: { 302: 0.25, 121: 0.25 },\n  262: { 225: 0.69 },\n  263: { 2: 1.0, 3: 1.0, 166: 1.0 },\n  264: { 8: 0.25, 139: 0.25 },\n  265: { 1: 0.69, 52: 1.0, 108: 1.0, 110: 0.69, 242: 1.0 },\n  266: { 303: 0.69, 160: 0.69 },\n  267: { 268: 1.0 },\n  268: { 129: 1.0, 267: 1.0 },\n  269: { 15: 1.0, 21: 1.0 },\n  270: { 78: 1.0, 200: 1.0 },\n  271: { 125: 0.69 },\n  272: { 198: 0.2, 245: 0.2 },\n  273: { 107: 0.2, 198: 0.2, 229: 1.0, 248: 1.0 },\n  274: { 26: 0.2 },\n  275: { 154: 0.68, 211: 0.68 },\n  276: { 216: 0.69, 225: 0.69 },\n  277: { 89: 0.2, 102: 0.25, 192: 0.2 },\n  278: { 159: 0.69, 193: 0.69 },\n  279: { 285: 0.68, 13: 0.68, 87: 0.25, 136: 0.25, 148: 0.69, 233: 0.68 },\n  280: { 62: 1.0 },\n  281: { 185: 0.69, 246: 0.69 },\n  282: { 94: 1.0, 144: 0.68, 172: 0.68, 202: 1.0 },\n  283: { 147: 1.0, 218: 1.0 },\n  284: { 292: 0.69, 155: 0.69, 201: 0.69 },\n  285: { 87: 1.0, 107: 0.68, 248: 1.0, 279: 0.68 },\n  286: { 72: 0.68, 181: 0.68 },\n  287: { 74: 1.0, 96: 1.0 },\n  288: { 302: 0.25, 93: 0.25 },\n  289: { 36: 1.0, 43: 0.68, 200: 1.0, 247: 0.68 },\n  290: { 94: 0.68, 142: 0.68 },\n  291: { 115: 1.0, 210: 1.0 },\n  292: { 42: 0.69, 201: 0.69, 284: 0.69 },\n  293: { 17: 1.0, 74: 1.0 },\n  294: { 221: 0.68 },\n  295: { 3: 1.0, 225: 0.69, 228: 0.69, 244: 1.0 },\n  296: { 76: 0.68, 226: 0.68 },\n  297: { 71: 0.68, 142: 0.68 },\n  298: { 113: 0.69, 137: 0.69 },\n  299: { 300: 1.0 },\n  303: { 31: 0.69, 266: 0.69 },\n  301: { 37: 0.68, 215: 0.68, 241: 0.68 },\n  300: { 231: 1.0, 299: 1.0 },\n  302: { 261: 0.25, 288: 0.25 },\n};\nconst route = new Graph(graphdata);\nconst dijkstra = nodes => {\n  if (nodes.length < 2) return [];\n  return route.path(nodes[0], nodes[1]);\n};\n\nexport { initialState, reducer, nodedata, graphdata, drawConfig };\n\nconst nodedotcolors = [\n  '#5fad56',\n  '#5fad56',\n  '#5fad56',\n  '#5fad56',\n  '#FF851B',\n  '#ffdc00',\n  '#ffdc00',\n  '#FF4136',\n];\nconst nodecolors = [\n  '#cfe7cc',\n  '#cfe7cc',\n  '#cfe7cc',\n  '#cfe7cc',\n  '#ffdaba',\n  '#fff5b3',\n  '#fff5b3',\n  '#ffc6c3',\n];\n","import { useState, useEffect, useRef } from 'react';\nimport { Circle, Group, Text } from 'react-konva';\nimport { drawConfig } from '../../store';\n\nconst Node = props => {\n  const [nodeRadiusTransformer, setnodeRadiusTransformer] = useState(8);\n  const [nodeBgTransformer, setnodeBgTransformer] = useState('#ffffff');\n  const [nodeOpacityTransformer, setnodeOpacityTransformer] = useState(0);\n  const [nodeStroke, setnodeStroke] = useState('#000000');\n  const [nodeStrokeWidthTransfomer, setnodeStrokeWidthTransfomer] = useState(0);\n  const [nodeDotRadiusTransformer, setnodeDotRadiusTransformer] = useState(8);\n  const [nodeDotBgTransformer, setnodeDotBgTransformer] = useState('#ffffff');\n  const [nodeDotOpacityTransformer, setnodeDotOpacityTransformer] = useState(0);\n  const [nodeTextOpacityTransformer, setnodeTextOpacityTransformer] = useState(0);\n  const [nodeTextSizeTransformer, setnodeTextSizeTransformer] = useState(0);\n  const [nodeTextStyleTransformer, setnodeTextStyleTransformer] = useState(0);\n\n  useEffect(() => {\n    setnodeRadiusTransformer(\n      drawConfig.nodeRadiusTransformer(props.v.weight, props.isSelected || props.isActive)\n    );\n    setnodeBgTransformer(\n      drawConfig.nodeBgTransformer(\n        props.v.weight,\n        props.isSelected || props.isActive,\n        props.isSelected,\n        props.selectedid\n      )\n    );\n    setnodeOpacityTransformer(\n      drawConfig.nodeOpacityTransformer(props.v.weight, props.isSelected || props.isActive)\n    );\n    setnodeStroke(drawConfig.nodeStroke);\n    setnodeStrokeWidthTransfomer(\n      drawConfig.nodeStrokeWidthTransfomer(props.v.weight, props.isSelected || props.isActive)\n    );\n    setnodeDotRadiusTransformer(\n      drawConfig.nodeDotRadiusTransformer(props.v.weight, props.isSelected || props.isActive)\n    );\n    setnodeDotBgTransformer(\n      drawConfig.nodeDotBgTransformer(\n        props.v.weight,\n        props.isSelected || props.isActive,\n        props.isSelected,\n        props.selectedid\n      )\n    );\n    setnodeDotOpacityTransformer(\n      drawConfig.nodeDotOpacityTransformer(props.v.weight, props.isSelected || props.isActive)\n    );\n    setnodeStrokeWidthTransfomer(\n      drawConfig.nodeStrokeWidthTransfomer(props.v.weight, props.isSelected || props.isActive)\n    );\n    setnodeOpacityTransformer(\n      drawConfig.nodeOpacityTransformer(props.v.weight, props.isSelected || props.isActive)\n    );\n    setnodeStrokeWidthTransfomer(\n      drawConfig.nodeStrokeWidthTransfomer(props.v.weight, props.isSelected || props.isActive)\n    );\n    setnodeTextOpacityTransformer(\n      drawConfig.nodeTextOpacityTransformer(props.v.weight, props.isSelected || props.isActive)\n    );\n    setnodeTextSizeTransformer(\n      drawConfig.nodeTextSizeTransformer(props.v.weight, props.isSelected || props.isActive)\n    );\n    setnodeTextStyleTransformer(\n      drawConfig.nodeTextStyleTransformer(props.v.weight, props.isSelected || props.isActive)\n    );\n  }, [props.isSelected, props.isActive, props.v.weight]);\n\n  return (\n    <>\n      <Group width={16} height={16}>\n        <Circle\n          key={`${props.k}_1`}\n          x={0}\n          y={0}\n          radius={nodeRadiusTransformer}\n          fill={nodeBgTransformer}\n          opacity={nodeOpacityTransformer}\n          stroke={nodeStroke}\n          strokeEnabled={true}\n          strokeWidth={nodeStrokeWidthTransfomer}\n        />\n        <Circle\n          key={`${props.k}_2`}\n          x={0}\n          y={0}\n          radius={nodeDotRadiusTransformer}\n          fill={nodeDotBgTransformer}\n          opacity={nodeDotOpacityTransformer}\n          stroke={'#000000'}\n          strokeEnabled={props.isSelected || props.isActive}\n          strokeWidth={nodeStrokeWidthTransfomer}\n        />\n        {(props.isSelected || props.isActive) && (\n          <Text\n            key={`${props.k}_3`}\n            text={props.v.name}\n            x={10}\n            y={-20}\n            fill={'#000000'}\n            opacity={nodeTextOpacityTransformer}\n            fontSize={nodeTextSizeTransformer}\n            fontStyle={nodeTextStyleTransformer}\n          />\n        )}\n      </Group>\n    </>\n  );\n};\nexport default Node;\n","import { useState, useEffect, useRef } from 'react';\nimport { Group } from 'react-konva';\nimport { drawConfig } from '../../store';\n\nimport Node from './Node';\n\nconst NodeGroup = props => {\n  const [isActive, setIsActive] = useState(false);\n  const [isSelected, setIsSelected] = useState(false);\n  const [selectedid, setSelectedid] = useState(0);\n\n  const nodeRef = useRef(null);\n  useEffect(() => {\n    nodeRef.current.moveToTop();\n  }, [isActive]);\n\n  useEffect(() => {\n    setIsSelected(props.store.selectedLabels.includes(props.k));\n  }, [props.store.selectedLabels, isSelected, props.k]);\n\n  // useEffect(() => {\n\n  // }, [props.store.pathnodes, isSelected, props.k]);\n\n  return (\n    <Group\n      ref={nodeRef}\n      key={props.k}\n      x={props.v.x * props.xScale + props.xOffset}\n      y={(1 - props.v.y) * props.yScale + props.yOffset}\n      width={2 * drawConfig.nodeRadiusTransformer(props.v.weight, true)}\n      height={2 * drawConfig.nodeRadiusTransformer(props.v.weight, true)}\n      onMouseEnter={e => setIsActive(true)}\n      onMouseLeave={e => setIsActive(false)}\n      onClick={async e => {\n        let tmplabels = [];\n\n        if (props.store.selectedLabels.length < 2) {\n          setSelectedid(props.store.selectedLabels.length);\n          tmplabels = [...props.store.selectedLabels, props.k];\n        } else if (props.store.selectedLabels.length === 2) {\n          setSelectedid(selectedid - 1);\n          tmplabels = [props.store.selectedLabels[1], props.k];\n        }\n\n        await props.dispatch({\n          type: 'SETSELECTEDLABELS',\n          selectedLabels: tmplabels,\n        });\n      }}\n    >\n      <Node {...props} {...{ isActive, isSelected, selectedid }}></Node>\n    </Group>\n  );\n};\n\nexport default NodeGroup;\n","import { useState, useEffect } from 'react';\nimport { Group } from 'react-konva';\nimport { nodedata } from '../../store';\nimport NodeGroup from './NodeGroup';\nimport { drawConfig } from '../../store';\n\nconst NodesLayer = props => {\n  const [nodes, setNodes] = useState([]);\n  const [xOffset, setxOffset] = useState(0);\n  const [yOffset, setyOffset] = useState(0);\n  const [xScale, setxScale] = useState(0);\n  const [yScale, setyScale] = useState(0);\n\n  useEffect(() => {\n    let tmpnodedata = Object.entries(nodedata)\n      .filter(e => {\n        if (props.store.pathnodes.length) {\n          if (props.store.pathnodes.includes(e[0])) return true;\n          return false;\n        }\n        return true;\n      })\n      .map(e => {\n        return { v: e[1], k: e[0] };\n      })\n      .sort((a, b) => a.v.weight - b.v.weight);\n\n    setxOffset(\n      ((1 - drawConfig.globalXScale) / 2) * props.width +\n        (window.innerWidth - 1.42 * window.innerHeight) / 2\n    );\n    setyOffset(((1 - drawConfig.globalYScale) / 2) * props.height);\n    setxScale(drawConfig.globalXScale * props.width * ((1.42 * window.innerHeight) / window.innerWidth));\n    setyScale(drawConfig.globalXScale * props.height);\n\n    setNodes(\n      tmpnodedata.map(e => (\n        <NodeGroup\n          k={e.k}\n          v={e.v}\n          {...props}\n          key={e.k}\n          {...{ xOffset, xScale, yOffset, yScale }}\n        ></NodeGroup>\n      ))\n    );\n  }, [props, xOffset, xScale, yOffset, yScale]);\n\n  return (\n    <Group\n    // listening={true} onMouseDown={checkDeselect} onTouchStart={checkDeselect}\n    >\n      {nodes}\n    </Group>\n  );\n};\nexport default NodesLayer;\n\n// https://coolors.co/001123-0eb1d2-34e4ea-8ab9b5-c8c2ae\n","import { useState, useEffect } from 'react';\nimport { Line } from 'react-konva';\nimport { nodedata, drawConfig } from '../../store';\n\nconst Edge = props => {\n  const [edgeBg, setedgeBg] = useState('#000000');\n  const [edgeWidth, setedgeWidth] = useState(0);\n  const [edgeOpacity, setedgeOpacity] = useState(0);\n\n  useEffect(() => {\n    setedgeBg(drawConfig.edgeBg(props.active, props.dim));\n    setedgeWidth(drawConfig.edgeWidthTransformer(props.weight, props.active, props.dim));\n    setedgeOpacity(drawConfig.edgeOpacityTransformer(props.weight, props.active, props.dim));\n  }, [props]);\n\n  return (\n    <Line\n      key={`k_${props.n0}_${props.n1}`}\n      x={0}\n      y={0}\n      points={[\n        nodedata[props.n0].x * props.xScale + props.xOffset || 0,\n        (1 - nodedata[props.n0].y) * props.yScale + props.yOffset || 0,\n        nodedata[props.n1].x * props.xScale + props.xOffset || 0,\n        (1 - nodedata[props.n1].y) * props.yScale + props.yOffset || 0,\n      ]}\n      stroke={edgeBg}\n      closed={true}\n      strokeWidth={edgeWidth}\n      lineJoin={'round'}\n      opacity={edgeOpacity}\n    />\n  );\n};\nexport default Edge;\n","import { useState, useEffect } from 'react';\nimport { Layer, Line, Group } from 'react-konva';\nimport { nodedata, graphdata, drawConfig } from '../../store';\nimport Edge from './Edge';\n\nconst EdgesLayer = props => {\n  const [edges, setEdges] = useState([]);\n\n  const [xOffset, setxOffset] = useState(0);\n  const [yOffset, setyOffset] = useState(0);\n  const [xScale, setxScale] = useState(0);\n  const [yScale, setyScale] = useState(0);\n\n  useEffect(() => {\n    setxOffset(\n      ((1 - drawConfig.globalXScale) / 2) * props.width +\n        (window.innerWidth - 1.42 * window.innerHeight) / 2\n    );\n    setyOffset(((1 - drawConfig.globalYScale) / 2) * props.height);\n    setxScale(drawConfig.globalXScale * props.width * ((1.42 * window.innerHeight) / window.innerWidth));\n    setyScale(drawConfig.globalXScale * props.height);\n\n    let tmpedges = [];\n\n    for (const [k, v] of Object.entries(props.graph)) {\n      for (const [k1, v1] of Object.entries(v)) {\n        tmpedges.push(\n          <Edge\n            {...{ xOffset, xScale, yOffset, yScale }}\n            n0={k}\n            n1={k1}\n            weight={v1}\n            active={props.active ?? false}\n            dim={props.dim ?? false}\n          ></Edge>\n        );\n      }\n    }\n\n    setEdges(tmpedges);\n  }, [props, xOffset, xScale, yOffset, yScale]);\n\n  return <Group>{edges}</Group>;\n};\nexport default EdgesLayer;\n","import { useState, useEffect } from 'react';\nimport { graphdata } from '../../store';\nimport EdgesGroup from './EdgesGroup';\n\nconst EdgesLayer = props => {\n  const [graph, setGraph] = useState({});\n\n  useEffect(() => {\n    if (props.store.pathnodes.length < 2) setGraph({});\n    let tmp = {};\n    for (let i = 0; i < props.store.pathnodes.length - 1; i++) {\n      tmp[props.store.pathnodes[i]] = {\n        [props.store.pathnodes[i + 1]]:\n          graphdata[props.store.pathnodes[i]][props.store.pathnodes[i + 1]],\n      };\n    }\n    setGraph(tmp);\n  }, [props.store.pathnodes, setGraph]);\n\n  return <EdgesGroup {...props} graph={graph} active={true}></EdgesGroup>;\n};\nexport default EdgesLayer;\n","import { useState, useEffect } from 'react';\nimport { Text, Rect, Group } from 'react-konva';\n\nconst BgLayer = props => {\n  const [dim, setDim] = useState(false);\n  useEffect(() => {\n    if (props.store.pathnodes.length) {\n      setDim(true);\n    }\n  }, [props.store.pathnodes]);\n\n  return (\n    <Group\n      onClick={async e => {\n        if (dim) {\n          await props.dispatch({\n            type: 'SETSELECTEDLABELS',\n            selectedLabels: [],\n          });\n          setDim(false);\n        }\n      }}\n    >\n      {dim && <Rect x={0} y={0} width={props.width} height={props.height} fill='#ffffff55' />}\n      <Text\n        text={\n          !dim\n            ? 'Click on any 2 nodes to show the shortest path between them'\n            : 'Tip: Click on any empty area to reset map'\n        }\n        x={0}\n        y={15}\n        width={props.width}\n        align={'center'}\n        fill={'#888888'}\n        fontSize={12}\n      ></Text>\n    </Group>\n  );\n};\nexport default BgLayer;\n\n// https://coolors.co/001123-0eb1d2-34e4ea-8ab9b5-c8c2ae\n","import { useState, useEffect } from 'react';\n\nimport { graphdata } from '../../store';\nimport EdgesGroup from './EdgesGroup';\n\nconst EdgesLayer = props => {\n  const [dim, setDim] = useState(false);\n\n  useEffect(() => {\n    setDim(!!props.store.pathnodes.length);\n  }, [props.store.pathnodes, setDim]);\n\n  return <EdgesGroup {...props} graph={graphdata} dim={dim}></EdgesGroup>;\n};\nexport default EdgesLayer;\n","import { Layer } from 'react-konva';\n\nimport NodesLayer from './NodesLayer';\nimport ActiveLayer from './ActiveLayer';\nimport BgLayer from '../Map/BgLayer';\nimport EdgesLayer from '../Map/EdgesLayer';\n\nconst DynamicMap = props => {\n  return (\n    <Layer>\n      <EdgesLayer {...props} />\n      <BgLayer {...props} />\n      <ActiveLayer {...props} />\n      <NodesLayer {...props} />\n    </Layer>\n  );\n};\n\nexport default DynamicMap;\n","const Controls = props => {\n  return (\n    <div className='flex-col'>\n      <div className='flex-row ControlsContainer'>\n        <span className='heading'>Graph Pathfinding on the</span>\n        <a\n          className='headingBold'\n          href={`https://en.wikipedia.org/wiki/London_Underground`}\n          target='_blank'\n          rel='noreferrer'\n        >\n          <span>London Tube</span>\n        </a>\n      </div>\n      <div className='flex-row'>\n        <span>\n          This is an interactive visualisation for finding the shortest path between 2 stations in the\n          London underground. Uses the <b>Dijkstra's graph pathfinding algorithm.</b>\n        </span>\n      </div>\n      <div className='flex-row'>\n        <a\n          class='github-button'\n          href='https://github.com/tusharpandey13'\n          data-color-scheme='no-preference: light; light: light; dark: dark;'\n          data-size='large'\n          aria-label='Follow @tusharpandey13 on GitHub'\n        >\n          Follow @tusharpandey13\n        </a>\n\n        <a\n          class='github-button'\n          href='https://github.com/tusharpandey13/dijkstra_london_tube'\n          data-color-scheme='no-preference: dark; light: dark; dark: dark;'\n          data-icon='octicon-star'\n          data-size='large'\n          aria-label='Star tusharpandey13/dijkstra_london_tube on GitHub'\n        >\n          Star on Github\n        </a>\n      </div>\n    </div>\n  );\n};\nexport default Controls;\n","import { useEffect, useState, useReducer, useRef } from 'react';\nimport { Stage } from 'react-konva';\nimport { initialState, reducer } from '../store';\n\nimport Map from './Map';\n\nimport Controls from './Controls';\n\nconst Content = props => {\n  const [store, dispatch] = useReducer(reducer, initialState);\n  const stageRef = useRef(null);\n\n  useWindowSize();\n\n  // const width = 1.42 * window.innerHeight;\n  const width = window.innerWidth - 20;\n  const height = window.innerHeight;\n\n  return (\n    <div class='ContentContainer'>\n      <Controls />\n      <Stage\n        className={`stage`}\n        ref={stageRef}\n        width={width}\n        height={height}\n        style={{\n          display: `flex`,\n          flexFlow: `row nowrap`,\n          justifyContent: `center`,\n        }}\n      >\n        <Map store={store} dispatch={dispatch} width={width} height={height} />\n      </Stage>\n    </div>\n  );\n};\nexport default Content;\n\n// Hook\nfunction useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    // Add event listener\n    window.addEventListener('resize', handleResize);\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n    // Remove event listener on cleanup\n    return () => window.removeEventListener('resize', handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n  // return windowSize;\n}\n","import './App.css';\n\nimport Content from './components';\n\nfunction App() {\n  return <Content className='App'></Content>;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n"],"sourceRoot":""}